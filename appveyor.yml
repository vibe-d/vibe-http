platform: x64
environment:
 matrix:
  - DC: dmd
    DVersion: 2.084.1
    arch: x64
  - DC: dmd
    DVersion: 2.082.0
    arch: x64
  - DC: dmd
    DVersion: 2.081.2
    arch: x86
  - DC: dmd
    DVersion: 2.080.1
    arch: x86_mscoff
  - DC: ldc
    DVersion: 1.11.0
    arch: x64
  - DC: ldc
    DVersion: 1.10.0
    arch: x86

skip_tags: false

install:
  - ps: function SetUpDCompiler
        {
            if($env:DC -eq "dmd"){
              if($env:arch -eq "x86"){
                $env:DConf = "m32";
              }
              elseif($env:arch -eq "x64"){
                $env:DConf = "m64";
              }
              echo "downloading ...";
              $env:toolchain = "msvc";
              $version = $env:DVersion;
              Invoke-WebRequest "http://downloads.dlang.org/releases/2.x/$($version)/dmd.$($version).windows.7z" -OutFile "c:\dmd.7z";
              echo "finished.";
              pushd c:\\;
              7z x dmd.7z > $null;
              popd;
            }
            elseif($env:DC -eq "ldc"){
              echo "downloading ...";
              if($env:arch -eq "x86"){
                $env:DConf = "m32";
              }
              elseif($env:arch -eq "x64"){
                $env:DConf = "m64";
              }
              $env:toolchain = "msvc";
              $version = $env:DVersion;
              if ([System.Version]$version -lt [System.Version]"1.7.0") {
                Invoke-WebRequest "https://github.com/ldc-developers/ldc/releases/download/v$($version)/ldc2-$($version)-win64-msvc.zip" -OutFile "c:\ldc.zip";
                echo "finished.";
                pushd c:\\;
                7z x ldc.zip > $null;
                popd;
              }
              else {
                Invoke-WebRequest "https://github.com/ldc-developers/ldc/releases/download/v$($version)/ldc2-$($version)-windows-multilib.7z" -OutFile "c:\ldc.7z";
                echo "finished.";
                pushd c:\\;
                7z x ldc.7z > $null;
                popd;
              }
            }
        }
  - ps: SetUpDCompiler
  - powershell -Command [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest "https://github.com/dlang/dub/releases/download/v1.7.2/dub-1.7.2-windows-x86.zip" -OutFile dub.zip
  - 7z x dub.zip -odub > nul
  - set PATH=%CD%\%binpath%;%CD%\dub;%PATH%
  - dub --version

before_build:
  - ps: if($env:arch -eq "x86"){
            $env:compilersetupargs = "x86";
            $env:Darch = "x86";
          }
        elseif($env:arch -eq "x86_mscoff"){
            $env:compilersetupargs = "x86";
            $env:Darch = "x86_mscoff";
        }
        elseif($env:arch -eq "x64"){
            $env:compilersetupargs = "amd64";
            $env:Darch = "x86_64";
        }
  - ps : if($env:DC -eq "dmd"){
           $env:PATH += ";C:\dmd2\windows\bin;";
         }
         elseif($env:DC -eq "ldc"){
           $version = $env:DVersion;
           if ([System.Version]$version -lt [System.Version]"1.7.0") {
             $env:PATH += ";C:\ldc2-$($version)-win64-msvc\bin";
           } else {
             $env:PATH += ";C:\ldc2-$($version)-windows-multilib\bin";
           }
           $env:DC = "ldc2";
         }
  - ps: $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall";
  - '"%compilersetup%" %compilersetupargs%'

build_script:
 - dub build -b release --arch=%Darch% --compiler=%DC%
 - echo dummy build script - dont remove me

test_script:
 - echo %PLATFORM%
 - echo %Darch%
 - echo %DC%
 - echo %PATH%
 - '%DC% --version'
 - dub test --arch=%Darch% --compiler=%DC%
